# .github/workflows/ci-cd.yml
name: CFMP_deploy

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: xzw2qwQ~
          MYSQL_DATABASE: cfmp-complaint-test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DB_ENGINE: django.db.backends.mysql
          DB_NAME: cfmp-complaint-test
          DB_USER: root
          DB_PASSWORD: xzw2qwQ~
          DB_HOST: localhost
          DB_PORT: 3306
        run: |
          python ./complaint-service/manage.py test
          

  build:  #构建+部署
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment archive
        run: |
          mkdir -p deploy-temp
          cp -r * deploy-temp/ 2>/dev/null || true
          cp -r .[^.]* deploy-temp/ 2>/dev/null || true
          cd deploy-temp
          rm -rf .git
          tar -czf ../cfmp-deploy.tar.gz .
          cd ..
          rm -rf deploy-temp

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to Aliyun
        run: |
          sshpass -p ${{secrets.ECS_PASSWORD}} scp -o StrictHostKeyChecking=no cfmp-deploy.tar.gz root@${{secrets.ECS_IP}}:/tmp/
          sshpass -p ${{secrets.ECS_PASSWORD}} ssh -o StrictHostKeyChecking=no root@${{secrets.ECS_IP}} "
          
            mkdir -p ~/Complaint &&
            cd ~/Complaint &&
            tar -xzf /tmp/cfmp-deploy.tar.gz &&
            rm /tmp/cfmp-deploy.tar.gz &&

            rm -rf frontend.tar backend.tar
          

          chmod +x start-k8s.sh
          
          ./start-k8s.sh
          "
        
